<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaohua.springbootpingjiao.mapper.StatsMapper">
    <resultMap id="fractionResultMap" type="com.xiaohua.springbootpingjiao.entity.WaterPojo">
        <id column="fraction_id" property="fraction_id"></id>
        <result column="role_name" property="role_name"></result>
        <result column="user_id" property="user_id"></result>
        <result column="fractions" property="fractions"></result>
        <result column="batch_id" property="batch_id"></result>
        <result column="courses_id" property="courses_id"></result>
        <result column="papers_id" property="papers_id"></result>
    </resultMap>
<!-- 整理流水表信息-->
    <select id="clearUpFraction" parameterType="hashmap" resultMap="fractionResultMap">
    SELECT
      f.`fraction_id`,
      f.`fractions`,
      r.`role_name` ,
      u.`user_id` ,
      b.`batch_id`,
      p.`papers_id`,
      f.`courses_id`
    FROM
      fraction f
      LEFT JOIN papers p
        ON p.`papers_id` = f.`papers_id`
      LEFT JOIN batch b
        ON b.`batch_id` = p.`batch_id`
      LEFT JOIN USER u
        ON u.`user_id` = f.`gradeds`
      LEFT JOIN USER uu
        ON uu.`user_id` = f.`rater`
      LEFT JOIN userrole ur
        ON ur.`user_id` = uu.`user_id`
      LEFT JOIN role r
        ON r.`role_id` = ur.`role_id`
    WHERE u.`user_state` != 0
      AND uu.`user_state` != 0
      AND p.`oapers_visible` != 0
      AND b.`batch_hide` = 3
      AND b.`batch_state` != 0
      AND b.`batch_id` = #{batchId}
    </select>

<!--查询所有参加评教老师-->
    <select id="queryTeacherStats" parameterType="hashmap" resultType="hashmap">
    SELECT
      f.gradeds
    FROM
      fraction f
      LEFT JOIN papers p
        ON p.`papers_id` = f.`papers_id`
      LEFT JOIN batch b
        ON b.`batch_id` = p.`batch_id`
    WHERE b.`batch_id` = #{batchId}
      And f.`papers_id` = #{papersId}
    GROUP BY f.gradeds
     </select>
<!--查询评教老师评教的科目-->
    <select id="queryTeacherCourse" parameterType="hashmap" resultType="hashmap">
    SELECT
      f.`courses_id`
    FROM
      fraction f
      LEFT JOIN papers p
        ON p.`papers_id` = f.`papers_id`
      LEFT JOIN batch b
        ON b.`batch_id` = p.`batch_id`
    WHERE b.`batch_id` = #{batchId}
      AND f.`gradeds` = #{gradeds}
      AND f.`papers_id` = #{papersId}
    GROUP BY f.`courses_id`
    </select>


<!--批量插入成绩-->
    <insert id="insertBatchScore" parameterType="java.util.List">
    INSERT INTO scores (
      gradeds,
      scores_sum,
      batch_id,
      papers_id,
      teahcer_sum,
      students_sum
    )
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
    (
        #{item.gradeds_Id},
        #{item.scores_Sum},
        #{item.batch_Id},
        #{item.papers_Id},
        #{item.teahcer_sum},
        #{item.students_sum}
     )
    </foreach>
    </insert>

<!--统计参与评教学院-->
    <select id="queryScoreDepartment" parameterType="hashmap" resultType="hashmap">
     SELECT
      d.`departments_id`,
      d.`departments_name`,
      COUNT(d.departments_id)
    FROM
      scores s
      LEFT JOIN USER u
        ON u.`user_id` = s.`gradeds`
      LEFT JOIN departments d
        ON d.`departments_id` = u.`departments_id`
    <where>
        <if test=" batchId != null ">AND batch_Id=#{batchId}</if>
        <if test=" papersId != null ">AND papers_id=#{papersId}</if>
    </where>
    GROUP BY d.departments_id
    </select>
<!--查询参与评教老师-->
    <select id="queryScoreTeacher"  parameterType="hashmap" resultType="hashmap">
    SELECT DISTINCT
      f.`gradeds`,
      f.`courses_id`,
      p.`papers_id`,
      b.`batch_id`
    FROM
      fraction f
      LEFT JOIN papers p
        ON p.`papers_id` = f.`papers_id`
      LEFT JOIN batch b
        ON b.`batch_id` = p.`batch_id`
    <where>
        <if test=" batchId != null ">AND b.batch_Id=#{batchId}</if>
        <if test=" papersId != null ">AND p.papers_id=#{papersId}</if>
    </where>
    </select>

<!--查询评价人数-->
    <select id="queryScoreMan"  parameterType="hashmap" resultType="hashmap">
    SELECT DISTINCT
      f.`rater`,
      f.`courses_id`,
      p.`papers_id`,
      b.`batch_id`
    FROM
      fraction f
      LEFT JOIN papers p
        ON p.`papers_id` = f.`papers_id`
      LEFT JOIN batch b
        ON b.`batch_id` = p.`batch_id`
    <where>
        <if test=" batchId != null ">AND b.batch_Id=#{batchId}</if>
        <if test=" papersId != null ">AND p.papers_id=#{papersId}</if>
    </where>
    </select>
<!--查询老师评价高于平均分的老师-->
    <select id="queryAverageTeacherDayu" parameterType="hashmap" resultType="hashmap" >
    SELECT
      *
    FROM
      scores
    WHERE scores_sum >
      (SELECT
        AVG(scores_sum)
      FROM
        scores)
        <if test=" batchId != null ">AND batch_Id=#{batchId}</if>
        <if test=" papersId != null ">AND papers_id=#{papersId}</if>
    </select>

<!--生成评教质量好坏饼图优秀-->
    <select id="queryTeacherDaYu90" parameterType="hashmap" resultType="hashmap" >
        SELECT
        *
        FROM
        scores
        WHERE scores_sum >90
        <if test=" batchId != null ">AND batch_Id=#{batchId}</if>
        <if test=" papersId != null ">AND papers_id=#{papersId}</if>
    </select>

    <!--生成评教质量好坏饼图中等-->
    <select id="queryTeacherDaYu60XiaoYu90" parameterType="hashmap" resultType="hashmap" >
        SELECT
        *
        FROM
        scores
        WHERE scores_sum BETWEEN 60 and 90
        <if test=" batchId != null ">AND batch_Id=#{batchId}</if>
        <if test=" papersId != null ">AND papers_id=#{papersId}</if>
    </select>

    <!--生成评教质量好坏饼图差-->
    <select id="queryTeacherXiaoyu60" parameterType="hashmap" resultType="hashmap" >
        SELECT
        *
        FROM
        scores
        WHERE scores_sum &lt;60
        <if test=" batchId != null ">AND batch_Id=#{batchId}</if>
        <if test=" papersId != null ">AND papers_id=#{papersId}</if>
    </select>
<!--二级联动查询批次-->
     <select id="queryBatchsList" parameterType="hashmap" resultType="hashmap" >
        SELECT
          *
        FROM
        batch b
        LEFT JOIN papers p
        ON p.`batch_id` = b.`batch_id`
        WHERE p.`oapers_visible`!=0
        AND b.`batch_state`!=0
        AND b.`batch_hide` = 3
        <if test=" papersId != null ">AND p.papers_id=#{papersId}</if>
         GROUP BY b.batch_id
     </select>

    <!--二级联动查询问卷-->
    <select id="queryPapersList" parameterType="hashmap" resultType="hashmap" >
         SELECT DISTINCT
          *
        FROM
          papers p
          LEFT JOIN batch b
            ON p.`batch_id` = b.`batch_id`
        WHERE p.`oapers_visible` != 0
          AND b.`batch_state` != 0
          AND b.`batch_hide` = 3
        <if test=" batchId != null ">AND b.batch_Id=#{batchId}</if>
        GROUP BY papers_id
    </select>

    <!--查询批次下的所有问卷-->
    <select id="queryPapers" parameterType="hashmap" resultType="hashmap" >
        SELECT DISTINCT
        *
        FROM
        papers p
        LEFT JOIN batch b
        ON p.`batch_id` = b.`batch_id`
        WHERE p.`oapers_visible` != 0
        AND b.`batch_state` != 0
        AND b.`batch_hide` = 3
        AND b.batch_Id=#{batchId}
    </select>

<!--取评教成绩前5-->
    <select id="querySocoreLimit5" parameterType="hashmap" resultType="hashmap" >
        SELECT
        s.`scores_id`,s.`scores_sum`,u.`user_name`,b.`batch_name`,p.`papers_name`, s.`students_sum`, s.`teahcer_sum`
        FROM
        scores s
        LEFT JOIN batch b
        ON b.`batch_id` = s.`batch_id`
        LEFT JOIN papers p
        ON p.`papers_id` = s.`papers_id`
        LEFT JOIN USER u
        ON u.`user_id` = s.`gradeds`
        <where>
        <if test=" batchId != null ">AND b.batch_Id=#{batchId}</if>
        <if test=" papersId != null ">AND p.papers_id=#{papersId}</if>
         </where>
        ORDER BY scores_sum DESC
        LIMIT 0, 3
    </select>

<!--  查询成绩  -->
    <select id="querySocore" parameterType="hashmap" resultType="hashmap" >
        SELECT
        s.`scores_id`,s.`scores_sum`,u.`user_name`, s.`students_sum`, s.`teahcer_sum`,s.`gradeds`,s.`papers_id`
        FROM
        scores s
        LEFT JOIN batch b
        ON b.`batch_id` = s.`batch_id`
        LEFT JOIN papers p
        ON p.`papers_id` = s.`papers_id`
        LEFT JOIN USER u
        ON u.`user_id` = s.`gradeds`
        <where>
            <if test=" batchId != null ">AND b.batch_Id=#{batchId}</if>
            <if test=" papersId != null ">AND p.papers_id=#{papersId}</if>
        </where>
        ORDER BY scores_sum DESC
        LIMIT ${page},${limit}
    </select>

    <select id="queryScoreSize" parameterType="hashmap" resultType="hashmap">
        SELECT
            *
        FROM
        scores s
        LEFT JOIN batch b
        ON b.`batch_id` = s.`batch_id`
        LEFT JOIN papers p
        ON p.`papers_id` = s.`papers_id`
        LEFT JOIN USER u
        ON u.`user_id` = s.`gradeds`
        <where>
            <if test=" batchId != null ">AND b.batch_Id=#{batchId}</if>
            <if test=" papersId != null ">AND p.papers_id=#{papersId}</if>
        </where>
    </select>

<!--查询某老师 课程成绩-->
    <select id="queryTeacherScore" parameterType="hashmap" resultType="hashmap">
    SELECT
      u.`user_id`,
      u.`user_name`,
      f.`fractions` ,
      f.`courses_id`,
      c.`courses_name`,
      r.`role_name`,
      f.`papers_id`,
      b.`batch_id`
    FROM
      fraction f
      LEFT JOIN USER u
        ON u.`user_id` = f.`gradeds`
      LEFT JOIN papers p
        ON p.`papers_id` = f.`papers_id`
      LEFT JOIN batch b
        ON b.`batch_id` = p.`batch_id`
      LEFT JOIN courses c
      ON c.`courses_id` = f.`courses_id`
      LEFT JOIN userrole ur ON
      ur.`user_id` = u.`user_id`
      LEFT JOIN role r
      ON r.`role_id` =ur.`role_id`
    WHERE f.`gradeds` = #{gradeds}
     <if test=" batchId != null ">AND b.batch_Id=#{batchId}</if>
     <if test=" papersId != null ">AND p.papers_id=#{papersId}</if>
    LIMIT ${page},${limit}
    </select>

    <select id="queryTeacherScoreSize" parameterType="hashmap" resultType="hashmap">
        SELECT
        *
        FROM
        scores s
        LEFT JOIN batch b
        ON b.`batch_id` = s.`batch_id`
        LEFT JOIN papers p
        ON p.`papers_id` = s.`papers_id`
        LEFT JOIN USER u
        ON u.`user_id` = s.`gradeds`
        WHERE s.`gradeds` = #{gradeds}
        <if test=" batchId != null ">AND b.batch_Id=#{batchId}</if>
        <if test=" papersId != null ">AND p.papers_id=#{papersId}</if>
    </select>

    <select id="queryTeacherScoreList" parameterType="hashmap" resultType="hashmap">
    SELECT
      f.`courses_id`
    FROM
      fraction f
      LEFT JOIN USER u
        ON u.`user_id` = f.`gradeds`
      LEFT JOIN papers p
        ON p.`papers_id` = f.`papers_id`
      LEFT JOIN batch b
        ON b.`batch_id` = p.`batch_id`
      LEFT JOIN courses c
      ON c.`courses_id` = f.`courses_id`
      LEFT JOIN userrole ur ON
      ur.`user_id` = u.`user_id`
      LEFT JOIN role r
      ON r.`role_id` =ur.`role_id`
     WHERE f.`gradeds` = #{gradeds}
        <if test=" batchId != null ">AND b.batch_Id=#{batchId}</if>
        <if test=" papersId != null ">AND p.papers_id=#{papersId}</if>
      GROUP BY f.`courses_id`
    </select>
<!--查询被评分人具体评教详情-->
    <select id="querydetail" parameterType="hashmap" resultType="hashmap">
    SELECT
      u.`user_id`,
      u.`user_name`,
      r.`role_name`,
      uu.`user_id`,
      uu.`user_name`,
      f.`fractions`,
      f.`papers_id`,
      f.`courses_id`
    FROM
      fraction f
      LEFT JOIN USER u
        ON u.`user_id` = f.`rater`
      LEFT JOIN USER uu
        ON uu.`user_id` = f.`gradeds`
      LEFT JOIN userrole ur
      ON ur.`user_id` = u.`user_id`
      LEFT JOIN role r
      ON r.`role_id` = ur.`role_id`
    WHERE f.`gradeds` = #{gradeds}
        AND f.`courses_id` = #{courses_id}
        <if test=" batchId != null ">AND f.batch_Id=#{batchId}</if>
        <if test=" papersId != null ">AND f.papers_id=#{papersId}</if>
    LIMIT ${page},${limit}
    </select>

    <select id="querydetailSize" parameterType="hashmap" resultType="hashmap">
        SELECT
        u.`user_id`,
        u.`user_name`,
        r.`role_name`,
        uu.`user_id`,
        uu.`user_name`,
        f.`fractions`,
        f.`papers_id`,
        f.`courses_id`
        FROM
        fraction f
        LEFT JOIN USER u
        ON u.`user_id` = f.`rater`
        LEFT JOIN USER uu
        ON uu.`user_id` = f.`gradeds`
        LEFT JOIN userrole ur
        ON ur.`user_id` = u.`user_id`
        LEFT JOIN role r
        ON r.`role_id` = ur.`role_id`
        WHERE f.`gradeds` = #{gradeds}
        AND f.`courses_id` = #{courses_id}
        <if test=" batchId != null ">AND f.batch_Id=#{batchId}</if>
        <if test=" papersId != null ">AND f.papers_id=#{papersId}</if>
    </select>

    <!--查询答案-->
    <select id="selectEvaluationAnswers" resultType="com.xiaohua.springbootpingjiao.entity.Fraction">
        select * from fraction where rater=#{rater} and gradeds=#{gradeds} and papers_id=#{papers_id} and courses_id=#{courses_id}
    </select>

    <!--计算分数-->
    <select id="selectFractions" resultType="HashMap">
    SELECT
      f.`fractions` AS fractions
    FROM
      fraction f
    WHERE f.papers_id = #{papers_id}
      AND f.rater = #{rater}
      AND f.gradeds = #{gradeds}
      AND courses_id = #{courses_id}
    </select>

    <select id="queryBaticNameList" parameterType="string" resultType="hashmap">
     SELECT
      *
    FROM
      batch b
    WHERE b.`batch_id` = #{batch_id}
      AND b.`batch_hide` != 0
    </select>
</mapper>