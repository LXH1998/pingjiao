<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaohua.springbootpingjiao.mapper.UserMapper">

    <resultMap id="UserResultMap" type="com.xiaohua.springbootpingjiao.entity.User">
        <id property="user_Id" column="user_id"></id>
        <result property="user_Name" column="user_name"></result>
        <result property="user_Sex" column="user_sex"></result>
        <result property="user_Account" column="user_account"></result>
        <result property="user_Password" column="user_password"></result>
        <result property="departments_Id" column="departments_id"></result>
        <result property="class_Id" column="class_id"></result>
        <result property="user_state" column="user_state"></result>
    </resultMap>

    <!--查询所有用户-->
    <select id="selectAllUser" resultType="HashMap">
        select * from user u left join departments d
          on u.departments_id=d.departments_id left join class c
            on c.class_id=u.class_id left join userrole ur
              on u.user_id=ur.user_id left join role r
                on r.role_id=ur.role_id
        where u.user_state = 1 and r.role_name!="管理员" limit #{pages},#{limit}
    </select>
    <!--left join userrole ur-->
    <!--on u.user_id=ur.user_id left join role r-->
    <!--on r.role_id=ur.role_id-->

    <!--所有用户的总数-->
    <select id="selectCount" resultType="HashMap">
        select * from user u
          left join userrole ur
            on u.user_id=ur.user_id left join role r
              on r.role_id=ur.role_id
        where u.user_state = 1 and r.role_name!="管理员"

    </select>

    <!--初始化密码-->
    <update id="updateUserPassword" parameterType="com.xiaohua.springbootpingjiao.entity.User">
        update user
        set user_password="123456789"
        where user_id = #{user_Id}
    </update>

    <!--删除用户，只是隐藏，user_state=1-->
    <update id="updateUserState" parameterType="com.xiaohua.springbootpingjiao.entity.User">
        update user
        set user_state="0"
        where user_id = #{user_Id}
    </update>

    <!--用户名的模糊查询-->
    <select id="selectAccountUsers" resultType="HashMap">
        select * from user u left join departments d
          on u.departments_id=d.departments_id left join userrole ur
            on u.user_id=ur.user_id left join role r
              on r.role_id=ur.role_id left join class c
                on c.class_id=u.class_id
        where u.user_state = 1 and r.role_name!="管理员"
          and u.user_account LIKE  concat('%',#{user_Account},'%')
          and r.role_name LIKE  concat('%',#{role_name},'%')
        group by u.user_id limit #{pages},#{limit}
    </select>
    <!--模糊查询总数-->
    <select id="selectAccountUsersCount" resultType="HashMap">
    select * from user u left join departments d
    on u.departments_id=d.departments_id left join userrole ur
    on u.user_id=ur.user_id left join role r
    on r.role_id=ur.role_id left join class c
    on c.class_id=u.class_id
    where u.user_state = 1 and r.role_name!="管理员"
    and u.user_account LIKE  concat('%',#{user_Account},'%')
    and r.role_name LIKE  concat('%',#{role_name},'%')
    </select>

    <!--查询所有角色-->
    <select id="selectAllRole" resultType="com.xiaohua.springbootpingjiao.entity.Role">
        select * from role r where r.role_name!="管理员"
    </select>

    <!--查询所有院系-->
    <select id="selectAllDepartments" resultType="com.xiaohua.springbootpingjiao.entity.Departments">
        select * from departments
    </select>

    <!--查询所有班级-->
    <select id="selectAllClass" resultType="HashMap">
        select * from class c left join departments d
          on c.departments_id = d.departments_id
        where d.departments_id=${departments_Id}
    </select>

    <!--修改个人信息-->
    <update id="updateUserInformation" parameterType="com.xiaohua.springbootpingjiao.entity.User">
        update user set user_name=#{user_Name},user_account=#{user_Account},user_sex=#{user_Sex},
                        departments_id=#{departments_Id},class_id=#{class_Id}
        where user_id=#{user_Id}
    </update>

    <!--批次转移班级-->
    <update id="updateUserClass" parameterType="com.xiaohua.springbootpingjiao.entity.User">
        update user set user_name=#{user_Name},user_account=#{user_Account},user_sex=#{user_Sex},
                        departments_id=#{departments_Id},class_id=#{class_Id}
        where user_id=#{user_Id}
    </update>

    <update id="updateUserRole" parameterType="com.xiaohua.springbootpingjiao.entity.Userrole">
        update userrole set role_id=#{role_Id} where user_id=#{user_Id}
    </update>

    <!--增加个人信息-->
    <insert id="insertUserInformation" parameterType="com.xiaohua.springbootpingjiao.entity.User">
        INSERT INTO user(user_name,user_account,user_password,user_sex,departments_id,class_id)
        values(#{user_Name},#{user_Account},"123456789",#{user_Sex},#{departments_Id},#{class_Id})
    </insert>
    <insert id="insertUserRole" parameterType="com.xiaohua.springbootpingjiao.entity.Userrole">
        INSERT INTO userrole(user_id,role_id) values(#{user_Id},#{role_Id})
    </insert>

    <select id="selectUserId" resultType="com.xiaohua.springbootpingjiao.entity.User">
        select * from user where user_name=#{user_Name} and user_account=#{user_Account}
    </select>
    
    <!--查询该用户的所拥有的角色-->
    <select id="selectUserHaveRole" resultType="HashMap">
        select * from userrole ur left join role r
          on ur.role_id=r.role_id
        where ur.user_id=#{user_id}
    </select>

    <!--删除用户的所有角色然后插入新角色-->
    <delete id="deleteUserIdRole" parameterType="com.xiaohua.springbootpingjiao.entity.Userrole">
        delete from userrole where user_id=#{user_Id}
    </delete>
    <insert id="insertUserIdRole" parameterType="com.xiaohua.springbootpingjiao.entity.Userrole">
        INSERT INTO userrole(user_id,role_id) values(#{user_Id},#{role_ID})
    </insert>
    
    <!--查询用户是否重复-->
    <select id="selectUserIfRepeat" resultType="HashMap">
        select* from user
        where user_account=#{user_account}
    </select>
</mapper>
